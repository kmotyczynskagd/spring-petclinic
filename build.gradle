plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.23'
    id 'pl.allegro.tech.build.axion-release' version '1.15.1'
    id 'maven-publish'
}

group = 'org.springframework.samples'
version = '3.1.5'
sourceCompatibility = '17'

repositories {
    maven {
        url "http://localhost:8082/repository/maven-central1/"
        allowInsecureProtocol = true
    }
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
    testImplementation 'org.testcontainers:mysql'
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-docker-compose'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:mysql'
}

tasks.named('test') {
    useJUnitPlatform()
}

task publishToNexus {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                def mavenreleasesurl = "http://localhost:8082/repository/maven-releases/"
                def mavensnapshoturl = "http://localhost:8082/repository/maven-snapshot/"
                allowInsecureProtocol = true
                url = version.endsWith('SNAPSHOT') ? mavensnapshoturl : mavenreleasesurl
                credentials {
                    username = System.getenv("NEXUS_USER")
                    password = System.getenv("NEXUS_PASS")
                }
            }
        }
    }

    dependsOn 'publish'
    doLast {
        logger.lifecycle("Publishing to Nexus completed.")
    }
}

jar {
    enabled = false
}
